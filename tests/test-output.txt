(node:120417) ExperimentalWarning: VM Modules is an experimental feature. This feature could change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
PASS __tests__/system/accounts.delete.test.js
  DELETE /accounts
    the account has no operations
      ✓ the account with the given ID is deleted (223 ms)
    the account has operations
      ✓ an error is returned, the account is not deleted (10 ms)
    the account does not belong to the given user or does not exist
      ✓ an error is returned, no account is deleted (9 ms)

PASS __tests__/system/accounts.get.test.js
  GET /accounts
    ✓ it returns all the given user accounts (91 ms)
    an account ID was given
      ✓ it returns just the account with the given ID (8 ms)
      the given account does not belong to the session user
        ✓ it returns null (10 ms)

PASS __tests__/system/accounts.patch.test.js
  PATCH /accounts
    an account ID was given
      ✓ an existing account is updated (87 ms)

PASS __tests__/system/accounts.post.test.js
  POST /accounts
    ✓ a new account is created and returned (89 ms)

PASS __tests__/system/healthz.get.test.js
  GET /healthz
    ✓ health is ok (70 ms)

PASS __tests__/system/tag-keys.delete.test.js
  DELETE /tags/keys
    the tagKey is used in no operations
      ✓ the tagKey with the given ID is deleted (86 ms)
    the tagKey has operations
      ✓ an error is returned, the tagKey is not deleted (9 ms)
    the tagKey does not belong to the given user or does not exist
      ✓ an error is returned, no tagKey is deleted (11 ms)

PASS __tests__/system/tag-keys.get.test.js
  GET /tags/keys
    ✓ it returns all the given user tagKeys (79 ms)
    a tagKey ID was given
      ✓ it returns just the tagKey with the given ID (8 ms)
      the given tagKey does not belong to the session user
        ✓ it returns null (7 ms)

PASS __tests__/system/tag-keys.patch.test.js
  PATCH /tags/keys
    a tagKey ID was given
      ✓ an existing tagKey is updated (81 ms)

PASS __tests__/system/tag-keys.post.test.js
  POST /tags/keys
    ✓ a new tagKey is created and returned (80 ms)

PASS __tests__/system/tag-values.delete.test.js
  DELETE /tags/values
    the tagValue is used in no operations
      ✓ the tagValue with the given ID is deleted (83 ms)
    the tagValue has operations
      ✓ an error is returned, the tagValue is not deleted (9 ms)
    the tagValue does not belong to the given user or does not exist
      ✓ an error is returned, no tagValue is deleted (6 ms)

PASS __tests__/system/tag-values.get.test.js
  GET /tags/values
    ✓ it returns all the given user tagValues (87 ms)
    a tagValue ID was given
      ✓ it returns just the tagValue with the given ID (8 ms)
      the given tagValue does not belong to the session user
        ✓ it returns null (6 ms)

PASS __tests__/system/tag-values.patch.test.js
  PATCH /tags/values
    a tagValue ID was given
      ✓ an existing tagValue is updated (85 ms)

PASS __tests__/system/tag-values.post.test.js
  POST /tags/values
    ✓ a new tagValue is created and returned (88 ms)

PASS __tests__/system/tags.delete.test.js
  DELETE /tags
    ✓ the tag with the given ID is deleted (82 ms)
    the tag does not belong to the given user or does not exist
      ✓ an error is returned, no tag is deleted (7 ms)

PASS __tests__/system/tags.get.test.js
  GET /tags
    ✓ it returns all the given user tags (87 ms)
    a tag ID was given
      ✓ it returns just the tag with the given ID (7 ms)
      the given tag does not belong to the session user
        ✓ it returns null (7 ms)

PASS __tests__/system/tags.patch.test.js
  PATCH /tags
    a tag ID was given
      ✓ an existing tag is updated (84 ms)

PASS __tests__/system/tags.post.test.js
  POST /tags
    ✓ a new tag is created and returned (86 ms)

PASS __tests__/system/users.post.test.js
  POST /users
    ✓ it returns new user (128 ms)

PASS __tests__/unit/persistence/modules/accounts/create-account.test.js
  create account
    ✓ a new account is created (13 ms)

PASS __tests__/unit/persistence/modules/accounts/delete-account.test.js
  delete account
    ✓ an existing account is deleted (7 ms)

PASS __tests__/unit/persistence/modules/accounts/read-account.test.js
  read account
    ✓ an existing account is returned (6 ms)

PASS __tests__/unit/persistence/modules/accounts/read-accounts.test.js
  read accounts
    ✓ all existing accounts for the given user are returned (5 ms)

PASS __tests__/unit/persistence/modules/accounts/update-account.test.js
  update account
    ✓ an existing account is updated (8 ms)

PASS __tests__/unit/persistence/modules/balances/calculate-balances.test.js
  calculate balances
    ✓ it returns all accounts balances (22 ms)

PASS __tests__/unit/persistence/modules/operations/create-operation.test.js
  create operation
    ✓ a new operation is created (15 ms)

PASS __tests__/unit/persistence/modules/operations/delete-operation.test.js
  delete operation
    ✓ an existing operation is deleted (11 ms)

PASS __tests__/unit/persistence/modules/operations/read-operation.test.js
  read operation
    ✓ an existing operation is returned (6 ms)

PASS __tests__/unit/persistence/modules/operations/read-operations.test.js
  read operations
    ✓ all existing operations for the given user are returned (8 ms)

PASS __tests__/unit/persistence/modules/operations/update-operation.test.js
  update operation
    ✓ an existing operation is updated (9 ms)

PASS __tests__/unit/persistence/modules/tags/create-tag-key.test.js
  create tagKey
    ✓ a new tagKey is created (9 ms)

PASS __tests__/unit/persistence/modules/tags/create-tag-value.test.js
  create tagValue
    ✓ a new tagValue is created (8 ms)

PASS __tests__/unit/persistence/modules/tags/create-tag.test.js
  create tag
    ✓ a new tag is created (12 ms)

PASS __tests__/unit/persistence/modules/tags/delete-tag-key.test.js
  delete tagKey
    ✓ an existing tagKey is deleted (8 ms)

PASS __tests__/unit/persistence/modules/tags/delete-tag-value.test.js
  delete tagValue
    ✓ an existing tagValue is deleted (11 ms)

PASS __tests__/unit/persistence/modules/tags/delete-tag.test.js
  delete tag
    ✓ an existing tag is deleted (8 ms)

PASS __tests__/unit/persistence/modules/tags/read-tag-key.test.js
  read tagKey
    ✓ an existing tagKey is returned (7 ms)

PASS __tests__/unit/persistence/modules/tags/read-tag-keys.test.js
  read tagKeys
    ✓ all existing tagKeys for the given user are returned (8 ms)

PASS __tests__/unit/persistence/modules/tags/read-tag-value.test.js
  read tagValue
    ✓ an existing tagValue is returned (8 ms)

PASS __tests__/unit/persistence/modules/tags/read-tag-values.test.js
  read tagValues
    ✓ all existing tagValues for the given user are returned (4 ms)

PASS __tests__/unit/persistence/modules/tags/read-tag.test.js
  read tag
    ✓ an existing tag is returned (9 ms)

PASS __tests__/unit/persistence/modules/tags/read-tags.test.js
  read tags
    ✓ all existing tags for the given user are returned (4 ms)

PASS __tests__/unit/persistence/modules/tags/update-tag-key.test.js
  update tagKey
    ✓ an existing tagKey is updated (9 ms)

PASS __tests__/unit/persistence/modules/tags/update-tag-value.test.js
  update tagValue
    ✓ an existing tagValue is updated (8 ms)

PASS __tests__/unit/persistence/modules/tags/update-tag.test.js
  update tag
    ✓ an existing tag is updated (9 ms)

PASS __tests__/unit/persistence/modules/transfers/create-transfer.test.js
  create transfer
    ✓ a new transfer is created (11 ms)

PASS __tests__/unit/persistence/modules/transfers/delete-transfer.test.js
  delete transfer
    ✓ an existing transfer is deleted (11 ms)

PASS __tests__/unit/persistence/modules/transfers/read-transfer.test.js
  read transfer
    ✓ an existing transfer is returned (6 ms)

PASS __tests__/unit/persistence/modules/transfers/read-transfers.test.js
  read transfers
    ✓ all existing transfers for the given user are returned (5 ms)

PASS __tests__/unit/persistence/modules/transfers/update-transfer.test.js
  update transfer
    ✓ an existing transfer is updated (9 ms)

PASS __tests__/unit/persistence/modules/users/create-user.test.js
  create user
    ✓ a new user is created (57 ms)

PASS __tests__/unit/persistence/modules/users/delete-user.test.js
  delete user
    ✓ an existing user is deleted (6 ms)

PASS __tests__/unit/persistence/modules/users/read-user.test.js
  read user
    ✓ it returns the user with the specified user ID (5 ms)

PASS __tests__/unit/persistence/modules/users/read-users.test.js
  read users
    ✓ it returns all users (5 ms)

PASS __tests__/unit/persistence/modules/users/update-user.test.js
  update user
    ✓ an existing user is updated (8 ms)

Test Suites: 54 passed, 54 total
Tests:       69 passed, 69 total
Snapshots:   0 total
Time:        34.282 s
